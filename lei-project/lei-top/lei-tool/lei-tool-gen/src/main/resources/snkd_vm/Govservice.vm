package ${package}.biz.gov.service;

import com.za.core.base.model.ApiPageResp;
import com.za.core.base.model.BaseResp;
import com.za.gisdata.biz.Transfer;
import ${package}.biz.gov.model.req.${entityAllLower}.*;
import ${package}.biz.gov.model.vo.${entityAllLower}.*;
import ${package}.biz.gov.service.Gov${entity}Service;
import com.za.gisdata.manage.${entity}Manage;
import com.za.gisdata.po.${entity};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class Gov${entity}Service {

@Autowired
private ${entity}Manage ${entityFirstLower}Manage;

public BaseResp
<ApiPageResp
<Gov${entity}VO>> list(Gov${entity}ListReq reqModel) {
  Integer pageNo = reqModel.getPageNo();
  Integer pageSize = reqModel.getPageSize();
  String keyword = reqModel.getKeyword();
  Integer startIndex = (pageNo-1)*pageSize;
  long totalCount = ${entityFirstLower}Manage.getCountByKeywordAndPage(keyword);
  if(totalCount==0){
  return BaseResp.success(new ApiPageResp());
  }
  List<${entity}> list = ${entityFirstLower}Manage.getListByKeywordAndPage(keyword,startIndex, pageSize);
  List
  <Gov${entity}VO> voList = Transfer.${entityFirstLower}ListToGov${entity}VOList(list);
    ApiPageResp
    <Gov${entity}VO> respItem = new ApiPageResp(voList,totalCount);
      return BaseResp.success(respItem);
      }

      public BaseResp
      <Gov${entity}VO> get(Gov${entity}GetReq reqModel) {
        Long id = reqModel.getId();
          ${entity} po = ${entityFirstLower}Manage.getById(id);
        Gov${entity}VO vo = Transfer.${entityFirstLower}ToGov${entity}VO(po);
        return BaseResp.success(vo);
        }

        public BaseResp
        <Gov${entity}VO> add(Gov${entity}AddReq reqModel) {
          BaseResp<${entity}> resp = ${entityFirstLower}Manage.create${entity}(#foreach($column in $columns)#if($column.javaFieldName!='id')
            reqModel.get${column.javaFieldNameUF}()#if($foreach.hasNext),#end#end#end);
          if(!resp.isSuccess()){
          return BaseResp.returnResp(resp);
          }

            ${entity} po = resp.getObj();
          Gov${entity}VO vo = Transfer.${entityFirstLower}ToGov${entity}VO(po);
          return BaseResp.success(vo);
          }


          public BaseResp
          <Gov${entity}VO> edit(Gov${entity}EditReq reqModel) {
            BaseResp<${entity}> resp = ${entityFirstLower}Manage.edit${entity}(#foreach($column in $columns) reqModel.get${column.javaFieldNameUF}
              ()#if($foreach.hasNext),#end#end);
            if(!resp.isSuccess()){
            return BaseResp.returnResp(resp);
            }

              ${entity} po = resp.getObj();
            Gov${entity}VO vo = Transfer.${entityFirstLower}ToGov${entity}VO(po);
            return BaseResp.success(vo);
            }

            public BaseResp del(Gov${entity}DelReq reqModel) {
            return ${entityFirstLower}Manage.remove${entity}(reqModel.getId());
            }

            }
