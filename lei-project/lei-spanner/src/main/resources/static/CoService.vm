package ${package}.biz.co.service;

import com.za.core.base.model.ApiPageResp;
import com.za.core.base.model.BaseResp;
import com.za.produce.biz.Transfer;
import ${package}.biz.co.model.req.${entityAllLower}.*;
import ${package}.biz.co.model.vo.${entityAllLower}.*;
import ${package}.biz.co.service.Co${entity}Service;
import com.za.produce.manage.${entity}Manage;
import com.za.produce.po.${entity};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class Co${entity}Service {

	@Autowired
	private ${entity}Manage ${entityFirstLower}Manage;

    public BaseResp<ApiPageResp<Co${entity}VO>> list(Co${entity}ListReq reqModel) {
    Integer pageNo = reqModel.getPageNo();
    Integer pageSize = reqModel.getPageSize();
    String keyword = reqModel.getKeyword();
    Integer startIndex = (pageNo-1)*pageSize;
    long totalCount = ${entityFirstLower}Manage.getCountByKeywordAndPage(keyword);
    if(totalCount==0){
        return BaseResp.success(new ApiPageResp());
    }
    List<${entity}> list = ${entityFirstLower}Manage.getListByKeywordAndPage(keyword,startIndex, pageSize);
    List<Co${entity}VO> voList = Transfer.${entityFirstLower}ListToCo${entity}VOList(list);
    ApiPageResp<Co${entity}VO> respItem = new ApiPageResp(voList,totalCount);
        return BaseResp.success(respItem);
    }

    public BaseResp<Co${entity}VO> get(Co${entity}GetReq reqModel) {
        Long id = reqModel.getId();
        ${entity} po = ${entityFirstLower}Manage.getById(id);
        Co${entity}VO vo = Transfer.${entityFirstLower}ToCo${entity}VO(po);
        return BaseResp.success(vo);
        }

    public BaseResp<Co${entity}VO> add(Co${entity}AddReq reqModel) {
        BaseResp<${entity}> resp = ${entityFirstLower}Manage.create${entity}(#foreach($column in $columns)#if($column.javaFieldName!='id') reqModel.get${column.javaFieldNameUF}()#if($foreach.hasNext),#end#end#end);
        if(!resp.isSuccess()){
        return BaseResp.returnResp(resp);
        }

        ${entity} po = resp.getObj();
        Co${entity}VO vo = Transfer.${entityFirstLower}ToCo${entity}VO(po);
        return BaseResp.success(vo);
        }


    public BaseResp<Co${entity}VO> edit(Co${entity}EditReq reqModel) {
        BaseResp<${entity}> resp = ${entityFirstLower}Manage.edit${entity}(#foreach($column in $columns) reqModel.get${column.javaFieldNameUF}()#if($foreach.hasNext),#end#end);
        if(!resp.isSuccess()){
        return BaseResp.returnResp(resp);
        }

        ${entity} po = resp.getObj();
        Co${entity}VO vo = Transfer.${entityFirstLower}ToCo${entity}VO(po);
        return BaseResp.success(vo);
        }

    public BaseResp del(Co${entity}DelReq reqModel) {
    return ${entityFirstLower}Manage.remove${entity}(reqModel.getId());
    }

}
