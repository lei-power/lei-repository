<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.mapper.${entity}Mapper">
    <resultMap type="${package}.entity.po.${entity}" id="baseResultMap">
#foreach($column in $columns)
    <result property="${column.javaFieldName}" column="${column.javaFieldName}"/>
#end
</resultMap>

	<sql id="columns" >
#foreach($column in $columns)
	    a.${column.columnName} AS "${column.javaFieldName}"#if($foreach.hasNext),#end

#end
    </sql>
    #foreach($column in $columns)
        #if($column.javaFieldName=='areaLevel')
          <sql id="areaLevelAndAreaIdConditionSql">
            <if test="areaLevel == 0">
            </if>
            <if test="areaLevel == 1">
              <if test="areaId != null and areaId.size() == 1">
                and a.province_id =
                <foreach collection="areaId" item="item">
                  #{item}
                </foreach>
              </if>
              <if test="areaId != null and areaId.size() > 1">
                and a.province_id in
                (
                <foreach collection="areaId" item="item" separator=",">
                  #{item}
                </foreach>
                )
              </if>
            </if>
            <if test="areaLevel == 2">
              <if test="areaId != null and areaId.size() == 1">
                and a.city_id =
                <foreach collection="areaId" item="item">
                  #{item}
                </foreach>
              </if>
              <if test="areaId != null and areaId.size() > 1">
                and a.city_id in
                (
                <foreach collection="areaId" item="item" separator=",">
                  #{item}
                </foreach>
                )
              </if>
            </if>

            <if test="areaLevel == 3">
              <if test="areaId != null and areaId.size() == 1">
                and a.county_id =
                <foreach collection="areaId" item="item">
                  #{item}
                </foreach>
              </if>
              <if test="areaId != null and areaId.size() > 1">
                and a.county_id in
                (
                <foreach collection="areaId" item="item" separator=",">
                  #{item}
                </foreach>
                )
              </if>
            </if>
            <if test="areaLevel == 4">
              <if test="areaId != null and areaId.size() == 1">
                and a.town_id =
                <foreach collection="areaId" item="item">
                  #{item}
                </foreach>
              </if>
              <if test="areaId != null and areaId.size() > 1">
                and a.town_id in
                (
                <foreach collection="areaId" item="item" separator=",">
                  #{item}
                </foreach>
                )
              </if>
            </if>

            <if test="areaLevel == 5">
              <if test="areaId != null and areaId.size() == 1">
                and a.village_id =
                <foreach collection="areaId" item="item">
                  #{item}
                </foreach>
              </if>
              <if test="areaId != null and areaId.size() > 1">
                and a.village_id in
                (
                <foreach collection="areaId" item="item" separator=",">
                  #{item}
                </foreach>
                )
              </if>
            </if>
          </sql>
        #end
    #end


	<insert id="insert" parameterType="${package}.entity.po.${entity}" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO
			${table} (#foreach($column in $columns)${column.columnName}#if($foreach.hasNext),#end#end)
		VALUES
			(#foreach($column in $columns)#{${column.javaFieldName}}#if($foreach.hasNext),#end#end)
	</insert> 

	<update id="update" parameterType="${package}.entity.po.${entity}" >
		UPDATE ${table}
		SET
#foreach($column in $columns)
		    ${column.columnName}=#{${column.javaFieldName}}#if($foreach.hasNext),#end

#end
	    WHERE id=#{id}
	</update>

	<delete id="delete" >
		DELETE FROM ${table} 
		WHERE id=#{id} 
	</delete>

    <select id="getById" resultMap="baseResultMap">
        SELECT
        	<include refid="columns"/>
        FROM
		    ${table} a
        WHERE
        #foreach($column in $columns)
            #if($column.javaFieldName=='delFlag')
              a.del_flag=0 and
            #end
        #end
            a.id=#{id}
    </select>

    <select id="getListByKeywordAndPage" resultMap="baseResultMap">
        SELECT
        	<include refid="columns"/>
        FROM
		    ${table} a
        <where>
            #foreach($column in $columns)
                #if($column.javaFieldName=='delFlag')
                  a.del_flag=0
                #end
                #if($column.javaFieldName=='areaLevel')
                  <include refid="areaLevelAndAreaIdConditionSql"/>
                #end
            #end
            <if test="keyword != null and keyword != ''">
                and a.name like concat('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY a.id desc
        <if test="startIndex!=null and pageSize!=null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="getCountByKeywordAndPage" resultType="Long">
        SELECT COUNT(*) FROM ${table} a
        <where>
            #foreach($column in $columns)
                #if($column.javaFieldName=='delFlag')
                  a.del_flag=0
                #end
                #if($column.javaFieldName=='areaLevel')
                  <include refid="areaLevelAndAreaIdConditionSql"/>
                #end
            #end
            <if test="keyword != null and keyword != ''">
                and a.name like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>

</mapper>